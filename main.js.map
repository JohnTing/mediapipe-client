{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["import DeviceDetector from \"device-detector-js\";\nimport controls from \"@mediapipe/control_utils\";\nimport drawingUtils from \"@mediapipe/drawing_utils\";\nimport mpFaceMesh from \"@mediapipe/face_mesh\";\n// const controls = window;\n// const drawingUtils = window;\n// const mpFaceMesh = window;\n\n\n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\ntestSupport([\n  {client: 'Chrome'},\n]);\n\nfunction testSupport(supportedDevices:{client?: string; os?: string;}[]) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (detectedDevice.client && device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (detectedDevice.os && device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    alert(`This demo, running on ${detectedDevice.client?.name}/${detectedDevice.os?.name}, ` +\n          `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n\nconst config = {locateFile: (file: string) => {\n  return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh@` +\n         `${mpFaceMesh.VERSION}/${file}`;\n}};\n\n// Our input frames will come from here.\nconst videoElement =\n    document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\nconst canvasElement =\n    document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\nconst controlsElement =\n    document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\nconst canvasCtx = canvasElement.getContext('2d')!;\n\n/**\n * Solution options.\n */\nconst solutionOptions = {\n  selfieMode: true,\n  enableFaceGeometry: false,\n  maxNumFaces: 1,\n  refineLandmarks: false,\n  minDetectionConfidence: 0.5,\n  minTrackingConfidence: 0.5\n};\n\n// We'll add this to our control panel later, but we'll save it here so we can\n// call tick() each time the graph runs.\nconst fpsControl = new controls.FPS();\n\n// Optimization: Turn off animated spinner after its hiding animation is done.\nconst spinner = document.querySelector('.loading')! as HTMLDivElement;\nspinner.ontransitionend = () => {\n  spinner.style.display = 'none';\n};\n\nfunction onResults(results: mpFaceMesh.Results): void {\n  // Hide the spinner.\n  document.body.classList.add('loaded');\n\n  // Update the frame rate.\n  fpsControl.tick();\n\n  // Draw the overlays.\n  canvasCtx.save();\n  canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n  canvasCtx.drawImage(\n      results.image, 0, 0, canvasElement.width, canvasElement.height);\n  if (results.multiFaceLandmarks) {\n    for (const landmarks of results.multiFaceLandmarks) {\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_TESSELATION,\n          {color: '#C0C0C070', lineWidth: 1});\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_RIGHT_EYE,\n          {color: '#FF3030'});\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_RIGHT_EYEBROW,\n          {color: '#FF3030'});\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_LEFT_EYE,\n          {color: '#30FF30'});\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_LEFT_EYEBROW,\n          {color: '#30FF30'});\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_FACE_OVAL,\n          {color: '#E0E0E0'});\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_LIPS, {color: '#E0E0E0'});\n           if (solutionOptions.refineLandmarks) {\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_RIGHT_IRIS,\n          {color: '#FF3030'});\n      drawingUtils.drawConnectors(\n          canvasCtx, landmarks, mpFaceMesh.FACEMESH_LEFT_IRIS,\n          {color: '#30FF30'});\n      }\n    }\n  }\n  canvasCtx.restore();\n}\n\nconst faceMesh = new mpFaceMesh.FaceMesh(config);\nfaceMesh.setOptions(solutionOptions);\nfaceMesh.onResults(onResults);\n\n// Present a control panel through which the user can manipulate the solution\n// options.\nnew controls\n    .ControlPanel(controlsElement, solutionOptions)\n    .add([\n      new controls.StaticText({title: 'MediaPipe Face Mesh'}),\n      fpsControl,\n      new controls.Toggle({title: 'Selfie Mode', field: 'selfieMode'}),\n      new controls.SourcePicker({\n        onFrame:\n             (input: controls.InputImage, size: controls.Rectangle) => {\n              const aspect = size.height / size.width;\n              let width: number, height: number;\n              if (window.innerWidth > window.innerHeight) {\n                height = window.innerHeight;\n                width = height / aspect;\n              } else {\n                width = window.innerWidth;\n                height = width * aspect;\n              }\n              canvasElement.width = width;\n              canvasElement.height = height;\n              return faceMesh.send({image: input});\n            },\n      }),\n      new controls.Slider({\n        title: 'Max Number of Faces',\n        field: 'maxNumFaces',\n        range: [1, 4],\n        step: 1\n      }),\n      new controls.Toggle(\n        {title: 'Refine Landmarks', field: 'refineLandmarks'}),\n      new controls.Slider({\n        title: 'Min Detection Confidence',\n        field: 'minDetectionConfidence',\n        range: [0, 1],\n        step: 0.01\n      }),\n      new controls.Slider({\n        title: 'Min Tracking Confidence',\n        field: 'minTrackingConfidence',\n        range: [0, 1],\n        step: 0.01\n      }),\n    ])\n    .on(x => {\n      const options = x as mpFaceMesh.Options;\n      videoElement.classList.toggle('selfie', options.selfieMode);\n      faceMesh.setOptions(options);\n    });\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}